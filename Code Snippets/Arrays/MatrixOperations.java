
import java.util.Random;
import java.util.Arrays;

/**
 * Class that implements matrix generation and display operations.
 * Demonstrates different ways to fill and display 2D arrays.
 */
public class MatrixOperations {

    public static void main(String[] args) {
        // Define matrix dimensions
        int rows = 3, cols = 3;

        // Generate and display matrices using different methods
        System.out.println("Matrix generated by columns:");
        int[][] columnMatrix = generateNewMatrixByCols(rows, cols);
        displayMatrix(columnMatrix);

        System.out.println("\nMatrix generated by rows:");
        int[][] rowMatrix = generateNewMatrixByRows(rows, cols);
        displayMatrix(rowMatrix);
    }

    /**
     * Generates a matrix filling it by rows.
     * 
     * @param rows Number of rows
     * @param cols Number of columns
     * @return Generated matrix
     */
    public static int[][] generateNewMatrixByRows(int rows, int cols) {
        int[][] newMatrix = new int[rows][cols];
        Random rand = new Random();

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                newMatrix[i][j] = rand.nextInt(15);
            }
        }
        return newMatrix;
    }

    /**
     * Generates a matrix filling it by columns.
     * 
     * @param rows Number of rows
     * @param cols Number of columns
     * @return Generated matrix
     */
    public static int[][] generateNewMatrixByCols(int rows, int cols) {
        int[][] newMatrix = new int[rows][cols];
        Random rand = new Random();

        for (int j = 0; j < cols; j++) {
            for (int i = 0; i < rows; i++) {
                newMatrix[i][j] = rand.nextInt(15);
            }
        }
        return newMatrix;
    }

    /**
     * Displays a matrix in a formatted way.
     * 
     * @param matrix Matrix to display
     */
    public static void displayMatrix(int[][] matrix) {
        for (int[] row : matrix) {
            for (int element : row) {
                System.out.printf("%3d ", element);
            }
            System.out.println();
        }

        // Another way of doing it:
        // for (int i = 0; i < matrix.length; i++) {
        // for (int j = 0; j < matrix[i].length; j++) {
        // System.out.print(matrix[i][j] + " ");
        // }
        // System.out.println();
        // }
    }
}